services:
  ui:
    container_name: UI
    image: ${DOCKER_REGISTRY-}ui
    build:
      context: .
      dockerfile: UI/UI/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - grafana
      - sqlserver
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_METRICS_ENABLED=true

  api:
    container_name: API
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: API/API/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - grafana
      - sqlserver
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_METRICS_ENABLED=true

  api2:
    container_name: API2
    image: ${DOCKER_REGISTRY-}api2
    build:
      context: .
      dockerfile: API2/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - grafana
      - sqlserver
    environment:
      - ASPNETCORE_URLS=http://+:8000
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_METRICS_ENABLED=true

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log/OTLPDemo/app-dev-logs.txt:/var/log/OTLPDemo/app-dev-logs.txt
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: ["-config.file=/etc/promtail/promtail-config.yaml"]
    depends_on:
      - loki

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.81.0
    container_name: otel-collector
    command: [ "--config=/etc/collector.yaml" ]
    ports:
      - "8889:8889" # Prometheus metrics exporter (scrape endpoint)
      - "4317:4317" # Endpoint where application will be pushing telemetry data, e.g. logs, traces, and metrics.
    volumes:
      - ./.infra/otel-collector-config.yml:/etc/collector.yaml
    depends_on:
      - tempo
      - loki

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./.infra/tempo.yaml:/etc/tempo.yaml

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:10.0.2
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      # - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - otel-collector
      - tempo
      - loki
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.infra/prometheus-config.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - otel-collector

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Admin@123
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    # networks:
      # - mynetwork

volumes:
  sqlserver-data:

# networks:
  # mynetwork: